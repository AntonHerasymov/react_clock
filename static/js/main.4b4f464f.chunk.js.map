{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getTime","Date","toUTCString","slice","Clock","state","time","interval","updateTime","newTime","setState","console","info","this","window","setInterval","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","renamedId","updateClockName","newClockName","handleHideClock","event","preventDefault","handleShowClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGvC,IAAMC,EAAb,4MACEC,MAAe,CACbC,KAAMN,KAFV,EAKEO,SAAW,EALb,EAsBEC,WAAa,WACX,IAAMC,EAAUT,IAEhB,EAAKU,SAAS,CAAEJ,KAAMG,IAGtBE,QAAQC,KAAK,EAAKP,MAAMC,OA5B5B,uDAOE,WACEO,KAAKN,SAAWO,OAAOC,YAAYF,KAAKL,WAAY,OARxD,gCAWE,SAAmBQ,GACbA,EAAUC,YAAcJ,KAAKK,MAAMD,WAErCN,QAAQQ,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDJ,KAAKK,MAAMD,cAdzE,kCAkBE,WACEH,OAAOM,cAAcP,KAAKN,YAnB9B,oBA+BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,KAAKK,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGR,KAAKR,MAAMC,cAzCtB,GAA2BgB,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAGX,IAAMG,EAAb,4MACEvB,MAAe,CACbY,UAAW,UACXY,UAAU,GAHd,EAMEC,UAAY,EANd,EAoBEC,gBAAkB,WAChB,EAAKD,UAAYhB,OAAOC,aAAY,WAClC,IAAMiB,EAAeR,IAErB,EAAKd,SAAS,CAAEO,UAAWe,MAC1B,OAzBP,EA4BEC,gBAAkB,SAACC,GACjBA,EAAMC,iBACN,EAAKzB,SAAS,CAAEmB,UAAU,KA9B9B,EAiCEO,gBAAkB,WAChB,EAAK1B,SAAS,CAAEmB,UAAU,KAlC9B,uDAQE,WACEQ,SAASC,iBAAiB,cAAezB,KAAKoB,iBAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,iBACxCvB,KAAKkB,oBAXT,kCAcE,WACEjB,OAAOM,cAAcP,KAAKiB,WAC1BO,SAASE,oBAAoB,cAAe1B,KAAKoB,iBACjDI,SAASE,oBAAoB,QAAS1B,KAAKuB,mBAjB/C,oBAqCE,WACE,MAGIvB,KAAKR,MAFPY,EADF,EACEA,UACAY,EAFF,EAEEA,SAGF,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOZ,UAAWA,WAhD5B,GAAyBK,IAAMC,WCZ/BiB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.4b4f464f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string,\n};\n\ntype Props = {\n  clockName: string\n};\n\nfunction getTime() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: getTime(),\n  };\n\n  interval = 0;\n\n  componentDidMount() {\n    this.interval = window.setInterval(this.updateTime, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  updateTime = () => {\n    const newTime = getTime();\n\n    this.setState({ time: newTime });\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.time);\n  };\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  renamedId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n    this.updateClockName();\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.renamedId);\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n  }\n\n  updateClockName = () => {\n    this.renamedId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      this.setState({ clockName: newClockName });\n    }, 3300);\n  };\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}